run # Scan example Terraform files and output SARIF for GitHub Security tab
  # Scan example Terraform files and output SARIF for GitHub Security tab
  policyguard scan examples/terraform/ -f sarif -o policyguard-results.sarif || echo "SCAN_FAILED=true" >> $GITHUB_ENV
  
  # Also generate human-readable output for logs
  policyguard scan examples/terraform/ -o policyguard-results.txt
  
  # Generate JUnit XML for test reporting
  policyguard scan examples/terraform/ -f junit -o policyguard-junit.xml
  
  # Display summary in the logs
  echo "=== PolicyGuard Scan Summary ==="
  grep -A 5 "SUMMARY" policyguard-results.txt || true
  shell: /usr/bin/bash -e {0}
=== PolicyGuard Scan Summary ===
SUMMARY
----------------------------------------
Total Resources Scanned: 77
Total Violations Found:  178
Pass Rate:               -131.2%

2s
Run github/codeql-action/upload-sarif@v3
  with:
    sarif_file: policyguard-results.sarif
    category: policyguard
    checkout_path: /home/runner/work/policyguard/policyguard
    token: ***
    matrix: null
    wait-for-processing: true
Uploading results
  Processing sarif files: ["policyguard-results.sarif"]
  Validating policyguard-results.sarif
Error details: instance.runs[0].results[0].fixes[0].artifactChanges is not of a type(s) array
  {
    "path": [
      "runs",
      0,
      "results",
      0,
      "fixes",
      0,
      "artifactChanges"
    ],
    "property": "instance.runs[0].results[0].fixes[0].artifactChanges",
    "message": "is not of a type(s) array",
    "schema": {
      "description": "One or more artifact changes that comprise a fix for a result.",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/artifactChange"
      }
    },
    "instance": null,
    "name": "type",
    "argument": [
      "array"
    ],
    "stack": "instance.runs[0].results[0].fixes[0].artifactChanges is not of a type(s) array"
  }



i got this recommendation from github copilot as the error was anlysised 

The failure is caused by the SARIF file generated by PolicyGuard: artifactChanges in fixes is not an array as required by the SARIF schema. Example error from the logs:

    instance.runs[0].results[148].fixes[0].artifactChanges is not of a type(s) array

Solution:

1. Update PolicyGuard's SARIF Output:

- Ensure that, in your SARIF output, fixes[*].artifactChanges is always an array, even if there's only a single item or none.
- Example fix in Go (if you're serializing SARIF structures):

  ```go
  type Fix struct {
      Description     *Message        `json:"description,omitempty"`
      ArtifactChanges []ArtifactChange `json:"artifactChanges"`
  }
  // When populating Fix, always use a slice, not a single object or null.
  ```

2. If you maintain PolicyGuard, update the code that generates SARIF to comply with the SARIF 2.1.0 schema: artifactChanges must be an array.

3. If you don't maintain PolicyGuard, file an issue or PR upstream with this bug and the solution above.

4. As a quick workaround, you can post-process the SARIF file after generation with a small script to fix artifactChanges, but the best solution is to fix the SARIF output in PolicyGuard.

Reference: See SARIF spec here: https://docs.oasis-open.org/sarif/sarif/v2.1.0/sarif-v2.1.0.html#_Toc34317438

After making this change, re-run the workflow. The SARIF upload step should succeed.

If you want a sample script to patch the SARIF file as a temporary workaround, let me know.
